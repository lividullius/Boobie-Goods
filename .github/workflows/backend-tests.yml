name: Backend Tests with Database

on:
  push:
    branches: [ "develop", "main", "hotfix/**", "feature/**" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      # Configurar H2 Database (em memória para testes)
      h2:
        image: h2database/h2
        ports:
          - 1521:1521
          - 8080:8080
        env:
          H2_OPTIONS: -ifNotExists
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Verificar estrutura do projeto
      run: |
        echo "=== Estrutura do Projeto ==="
        ls -la
        echo "=== Backend ==="
        ls -la Backend/
        echo "=== Arquivos de configuração ==="
        find Backend/src -name "*.properties" -o -name "*.yml" | head -10
        
    - name: Configurar JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Verificar versão do Java e Maven
      run: |
        echo "=== Versões ==="
        java -version
        mvn -version
        
    - name: Compilar aplicação
      run: |
        echo "=== COMPILANDO APLICAÇÃO ==="
        cd Backend
        mvn clean compile -DskipTests
        echo "=== COMPILAÇÃO CONCLUÍDA ==="
        
    - name: Executar testes unitários
      run: |
        echo "=== EXECUTANDO TESTES UNITÁRIOS ==="
        cd Backend
        mvn test -Dspring.profiles.active=test
        echo "=== TESTES UNITÁRIOS CONCLUÍDOS ==="
        
    - name: Executar testes de integração
      run: |
        echo "=== EXECUTANDO TESTES DE INTEGRAÇÃO ==="
        cd Backend
        mvn verify -Dspring.profiles.active=test
        echo "=== TESTES DE INTEGRAÇÃO CONCLUÍDOS ==="
        
    - name: Gerar relatório de cobertura
      run: |
        echo "=== GERANDO RELATÓRIO DE COBERTURA ==="
        cd Backend
        mvn jacoco:report
        echo "=== RELATÓRIO DE COBERTURA GERADO ==="
        
    - name: Verificar saúde da aplicação
      run: |
        echo "=== VERIFICANDO SAÚDE DA APLICAÇÃO ==="
        cd Backend
        # Iniciar a aplicação em background
        timeout 60s mvn spring-boot:run -Dspring.profiles.active=test &
        APP_PID=$!
        
        # Aguardar a aplicação iniciar
        echo "Aguardando aplicação iniciar..."
        sleep 30
        
        # Verificar se a aplicação está rodando
        if curl -f http://localhost:8080/actuator/health 2>/dev/null; then
          echo "✅ Aplicação está funcionando!"
        else
          echo "❌ Aplicação não está respondendo"
          # Mostrar logs para debug
          echo "=== LOGS DA APLICAÇÃO ==="
          ps aux | grep java
        fi
        
        # Parar a aplicação
        kill $APP_PID 2>/dev/null || true
        
    - name: Testar endpoints principais
      run: |
        echo "=== TESTANDO ENDPOINTS ==="
        cd Backend
        # Iniciar aplicação em background
        timeout 60s mvn spring-boot:run -Dspring.profiles.active=test &
        APP_PID=$!
        
        # Aguardar inicialização
        sleep 30
        
        # Testar endpoints
        echo "Testando GET /api/contratos"
        curl -f http://localhost:8080/api/contratos || echo "Endpoint /api/contratos não disponível"
        
        echo "Testando GET /api/pessoas"  
        curl -f http://localhost:8080/api/pessoas || echo "Endpoint /api/pessoas não disponível"
        
        echo "Testando GET /api/projetos"
        curl -f http://localhost:8080/api/projetos || echo "Endpoint /api/projetos não disponível"
        
        # Parar aplicação
        kill $APP_PID 2>/dev/null || true
        
    - name: Verificar logs de teste
      if: always()
      run: |
        echo "=== LOGS DE TESTE ==="
        find Backend/target -name "*.log" -exec echo "=== {} ===" \; -exec cat {} \; || echo "Nenhum log encontrado"
        
    - name: Upload de relatórios de teste
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: |
          Backend/target/surefire-reports/
          Backend/target/failsafe-reports/
          Backend/target/site/jacoco/
        retention-days: 30
        
    - name: Publicar resultados dos testes
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Maven Tests
        path: Backend/target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: true